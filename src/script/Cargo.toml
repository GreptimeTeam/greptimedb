[package]
name = "script"
edition.workspace = true
version.workspace = true
license.workspace = true

[features]
default = ["python"]
pyo3_backend = ["dep:pyo3", "arrow/pyarrow"]
python = [
    "dep:datafusion",
    "dep:datafusion-common",
    "dep:datafusion-expr",
    "dep:datafusion-physical-expr",
    "dep:rustpython-vm",
    "dep:rustpython-parser",
    "dep:rustpython-compiler",
    "dep:rustpython-compiler-core",
    "dep:rustpython-codegen",
    "dep:rustpython-ast",
    "dep:rustpython-pylib",
    "dep:rustpython-stdlib",
    "dep:paste",
]

[dependencies]
arrow.workspace = true
async-trait.workspace = true
catalog = { path = "../catalog" }
common-catalog = { path = "../common/catalog" }
common-error = { path = "../common/error" }
common-function = { path = "../common/function" }
common-query = { path = "../common/query" }
common-recordbatch = { path = "../common/recordbatch" }
common-telemetry = { path = "../common/telemetry" }
common-time = { path = "../common/time" }
common-runtime = { path = "../common/runtime" }
console = "0.15"
crossbeam-utils = "0.8.14"
datafusion = { workspace = true, optional = true }
datafusion-common = { workspace = true, optional = true }
datafusion-expr = { workspace = true, optional = true }
datafusion-physical-expr = { workspace = true, optional = true }
datatypes = { path = "../datatypes" }
futures.workspace = true
futures-util.workspace = true
once_cell = "1.17.0"
paste = { workspace = true, optional = true }
query = { path = "../query" }
# TODO(discord9): This is a forked and tweaked version of RustPython, please update it to newest original RustPython After RustPython support GC
rustpython-ast = { git = "https://github.com/discord9/RustPython", optional = true, rev = "9ed5137412" }
rustpython-codegen = { git = "https://github.com/discord9/RustPython", optional = true, rev = "9ed5137412" }
rustpython-compiler = { git = "https://github.com/discord9/RustPython", optional = true, rev = "9ed5137412" }
rustpython-compiler-core = { git = "https://github.com/discord9/RustPython", optional = true, rev = "9ed5137412" }
rustpython-parser = { git = "https://github.com/discord9/RustPython", optional = true, rev = "9ed5137412" }
rustpython-pylib = { git = "https://github.com/discord9/RustPython", optional = true, rev = "9ed5137412", features = [
    "freeze-stdlib",
] }
rustpython-stdlib = { git = "https://github.com/discord9/RustPython", optional = true, rev = "9ed5137412" }
rustpython-vm = { git = "https://github.com/discord9/RustPython", optional = true, rev = "9ed5137412", features = [
    "default",
    "codegen",
] }
pyo3 = { version = "0.18", optional = true, features = ["abi3", "abi3-py37"] }
session = { path = "../session" }
snafu = { version = "0.7", features = ["backtraces"] }
sql = { path = "../sql" }
store-api = { path = "../store-api" }
table = { path = "../table" }
tokio.workspace = true

[dev-dependencies]
catalog = { path = "../catalog", features = ["testing"] }
common-test-util = { path = "../common/test-util" }
log-store = { path = "../log-store" }
mito = { path = "../mito", features = ["test"] }
ron = "0.7"
serde = { version = "1.0", features = ["derive"] }
storage = { path = "../storage" }
tokio-test = "0.4"
criterion = { version = "0.4", features = ["html_reports", "async_tokio"] }
rayon = "1.0"

[[bench]]
name = "py_benchmark"
harness = false
