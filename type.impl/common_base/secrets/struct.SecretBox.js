(function() {
    var type_impls = Object.fromEntries([["common_base",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#151-160\">Source</a><a href=\"#impl-Clone-for-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Zeroize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#155-159\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#145-149\">Source</a><a href=\"#impl-Debug-for-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: Zeroize&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#146-148\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#137-143\">Source</a><a href=\"#impl-Default-for-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: Zeroize + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#138-142\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-SecretBox%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#212-222\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-SecretBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;T&gt;<div class=\"where\">where\n    T: Zeroize + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#216-221\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(deserializer: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, D::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#72-76\">Source</a><a href=\"#impl-Drop-for-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: Zeroize&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#73-75\">Source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExposeSecret%3CS%3E-for-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#162-166\">Source</a><a href=\"#impl-ExposeSecret%3CS%3E-for-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: Zeroize&gt; <a class=\"trait\" href=\"common_base/secrets/trait.ExposeSecret.html\" title=\"trait common_base::secrets::ExposeSecret\">ExposeSecret</a>&lt;S&gt; for <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expose_secret\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#163-165\">Source</a><a href=\"#method.expose_secret\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"common_base/secrets/trait.ExposeSecret.html#tymethod.expose_secret\" class=\"fn\">expose_secret</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class='docblock'>Expose secret: this is the only method providing access to a secret.</div></details></div></details>","ExposeSecret<S>","common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExposeSecretMut%3CS%3E-for-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#168-172\">Source</a><a href=\"#impl-ExposeSecretMut%3CS%3E-for-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: Zeroize&gt; <a class=\"trait\" href=\"common_base/secrets/trait.ExposeSecretMut.html\" title=\"trait common_base::secrets::ExposeSecretMut\">ExposeSecretMut</a>&lt;S&gt; for <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.expose_secret_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#169-171\">Source</a><a href=\"#method.expose_secret_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"common_base/secrets/trait.ExposeSecretMut.html#tymethod.expose_secret_mut\" class=\"fn\">expose_secret_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a></h4></section></summary><div class='docblock'>Expose secret: this is the only method providing access to a secret.</div></details></div></details>","ExposeSecretMut<S>","common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBox%3CS%3E%3E-for-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#80-84\">Source</a><a href=\"#impl-From%3CBox%3CS%3E%3E-for-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: Zeroize&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;&gt; for <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#81-83\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Box<S>>","common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#174-181\">Source</a><a href=\"#impl-PartialEq-for-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + Zeroize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#178-180\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#104-135\">Source</a><a href=\"#impl-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: Zeroize + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_ctr\" class=\"method\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#113-120\">Source</a><h4 class=\"code-header\">pub fn <a href=\"common_base/secrets/struct.SecretBox.html#tymethod.new_with_ctr\" class=\"fn\">new_with_ctr</a>(ctr: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; S) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a secret value using the provided function as a constructor.</p>\n<p>The implementation makes an effort to zeroize the locally constructed value\nbefore it is copied to the heap, and constructing it inside the closure minimizes\nthe possibility of it being accidentally copied by other code.</p>\n<p><strong>Note:</strong> using <a href=\"common_base/secrets/struct.SecretBox.html#method.new\" title=\"associated function common_base::secrets::SecretBox::new\"><code>Self::new</code></a> or <a href=\"common_base/secrets/struct.SecretBox.html#method.new_with_mut\" title=\"associated function common_base::secrets::SecretBox::new_with_mut\"><code>Self::new_with_mut</code></a> is preferable when possible,\nsince this method’s safety relies on empyric evidence and may be violated on some targets.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_with_ctr\" class=\"method\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#127-134\">Source</a><h4 class=\"code-header\">pub fn <a href=\"common_base/secrets/struct.SecretBox.html#tymethod.try_new_with_ctr\" class=\"fn\">try_new_with_ctr</a>&lt;E&gt;(\n    ctr: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S, E&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, E&gt;</h4></section></summary><div class=\"docblock\"><p>Same as <a href=\"common_base/secrets/struct.SecretBox.html#method.new_with_ctr\" title=\"associated function common_base::secrets::SecretBox::new_with_ctr\"><code>Self::new_with_ctr</code></a>, but the constructor can be fallible.</p>\n<p><strong>Note:</strong> using <a href=\"common_base/secrets/struct.SecretBox.html#method.new\" title=\"associated function common_base::secrets::SecretBox::new\"><code>Self::new</code></a> or <a href=\"common_base/secrets/struct.SecretBox.html#method.new_with_mut\" title=\"associated function common_base::secrets::SecretBox::new_with_mut\"><code>Self::new_with_mut</code></a> is preferable when possible,\nsince this method’s safety relies on empyric evidence and may be violated on some targets.</p>\n</div></details></div></details>",0,"common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#86-93\">Source</a><a href=\"#impl-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: Zeroize&gt; <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#88-92\">Source</a><h4 class=\"code-header\">pub fn <a href=\"common_base/secrets/struct.SecretBox.html#tymethod.new\" class=\"fn\">new</a>(boxed_secret: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;S&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a secret value using a pre-boxed value.</p>\n</div></details></div></details>",0,"common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#95-102\">Source</a><a href=\"#impl-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: Zeroize + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>&gt; <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#97-101\">Source</a><h4 class=\"code-header\">pub fn <a href=\"common_base/secrets/struct.SecretBox.html#tymethod.new_with_mut\" class=\"fn\">new_with_mut</a>(ctr: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>)) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a secret value using a function that can initialize the vale in-place.</p>\n</div></details></div></details>",0,"common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-SecretBox%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#224-234\">Source</a><a href=\"#impl-Serialize-for-SecretBox%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;T&gt;<div class=\"where\">where\n    T: Zeroize + <a class=\"trait\" href=\"common_base/secrets/trait.SerializableSecret.html\" title=\"trait common_base::secrets::SerializableSecret\">SerializableSecret</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#228-233\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","common_base::secrets::SecretString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#66-70\">Source</a><a href=\"#impl-Zeroize-for-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: Zeroize&gt; Zeroize for <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#67-69\">Source</a><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","common_base::secrets::SecretString"],["<section id=\"impl-ZeroizeOnDrop-for-SecretBox%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/secrets.rs.html#78\">Source</a><a href=\"#impl-ZeroizeOnDrop-for-SecretBox%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: Zeroize&gt; ZeroizeOnDrop for <a class=\"struct\" href=\"common_base/secrets/struct.SecretBox.html\" title=\"struct common_base::secrets::SecretBox\">SecretBox</a>&lt;S&gt;</h3></section>","ZeroizeOnDrop","common_base::secrets::SecretString"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[26796]}