(function() {
    var type_impls = Object.fromEntries([["mito2",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncWrite-for-InstrumentedAsyncWrite%3C'_,+W%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mito2/sst/index/store.rs.html#233-258\">Source</a><a href=\"#impl-AsyncWrite-for-InstrumentedAsyncWrite%3C'_,+W%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;W: AsyncWrite + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt; AsyncWrite for <a class=\"struct\" href=\"mito2/sst/index/store/struct.InstrumentedAsyncWrite.html\" title=\"struct mito2::sst::index::store::InstrumentedAsyncWrite\">InstrumentedAsyncWrite</a>&lt;'_, W&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mito2/sst/index/store.rs.html#234-245\">Source</a><a href=\"#method.poll_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_write</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to write bytes from <code>buf</code> into the object. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mito2/sst/index/store.rs.html#247-253\">Source</a><a href=\"#method.poll_flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_flush</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to flush the object, ensuring that any buffered data reach\ntheir destination. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_close\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mito2/sst/index/store.rs.html#255-257\">Source</a><a href=\"#method.poll_close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_close</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to close the object. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write_vectored\" class=\"method trait-impl\"><a href=\"#method.poll_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_write_vectored</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    bufs: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to write bytes from <code>bufs</code> into the object using vectored\nIO operations. <a>Read more</a></div></details></div></details>","AsyncWrite","mito2::sst::index::puffin_manager::InstrumentedAsyncWrite"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InstrumentedAsyncWrite%3C'a,+W%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mito2/sst/index/store.rs.html#207\">Source</a><a href=\"#impl-InstrumentedAsyncWrite%3C'a,+W%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, W&gt; <a class=\"struct\" href=\"mito2/sst/index/store/struct.InstrumentedAsyncWrite.html\" title=\"struct mito2::sst::index::store::InstrumentedAsyncWrite\">InstrumentedAsyncWrite</a>&lt;'a, W&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.project\" class=\"method\"><a class=\"src rightside\" href=\"src/mito2/sst/index/store.rs.html#207\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"mito2/sst/index/store/struct.InstrumentedAsyncWrite.html#tymethod.project\" class=\"fn\">project</a>&lt;'pin&gt;(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;'pin mut Self&gt;,\n) -&gt; __InstrumentedAsyncWriteProjection&lt;'pin, 'a, W&gt;</h4></section><section id=\"method.project_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/mito2/sst/index/store.rs.html#207\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"mito2/sst/index/store/struct.InstrumentedAsyncWrite.html#tymethod.project_ref\" class=\"fn\">project_ref</a>&lt;'pin&gt;(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;'pin Self&gt;,\n) -&gt; __InstrumentedAsyncWriteProjectionRef&lt;'pin, 'a, W&gt;</h4></section></div></details>",0,"mito2::sst::index::puffin_manager::InstrumentedAsyncWrite"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InstrumentedAsyncWrite%3C'a,+W%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mito2/sst/index/store.rs.html#216-231\">Source</a><a href=\"#impl-InstrumentedAsyncWrite%3C'a,+W%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, W&gt; <a class=\"struct\" href=\"mito2/sst/index/store/struct.InstrumentedAsyncWrite.html\" title=\"struct mito2::sst::index::store::InstrumentedAsyncWrite\">InstrumentedAsyncWrite</a>&lt;'a, W&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/mito2/sst/index/store.rs.html#218-230\">Source</a><h4 class=\"code-header\">fn <a href=\"mito2/sst/index/store/struct.InstrumentedAsyncWrite.html#tymethod.new\" class=\"fn\">new</a>(\n    inner: W,\n    write_byte_count: &amp;'a IntCounter,\n    write_count: &amp;'a IntCounter,\n    flush_count: &amp;'a IntCounter,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new <code>InstrumentedAsyncWrite</code>.</p>\n</div></details></div></details>",0,"mito2::sst::index::puffin_manager::InstrumentedAsyncWrite"],["<section id=\"impl-Unpin-for-InstrumentedAsyncWrite%3C'a,+W%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mito2/sst/index/store.rs.html#207\">Source</a><a href=\"#impl-Unpin-for-InstrumentedAsyncWrite%3C'a,+W%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'pin, 'a, W&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"mito2/sst/index/store/struct.InstrumentedAsyncWrite.html\" title=\"struct mito2::sst::index::store::InstrumentedAsyncWrite\">InstrumentedAsyncWrite</a>&lt;'a, W&gt;<div class=\"where\">where\n    PinnedFieldsOf&lt;__InstrumentedAsyncWrite&lt;'pin, 'a, W&gt;&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,</div></h3></section>","Unpin","mito2::sst::index::puffin_manager::InstrumentedAsyncWrite"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[10132]}