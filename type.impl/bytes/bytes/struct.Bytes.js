(function() {
    var type_impls = Object.fromEntries([["servers",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5Bu8%5D%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-Borrow%3C%5Bu8%5D%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[u8]>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Buf-for-Bytes\" class=\"impl\"><a href=\"#impl-Buf-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Buf for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.remaining\" class=\"method trait-impl\"><a href=\"#method.remaining\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">remaining</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of bytes between the current position and the end of\nthe buffer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunk\" class=\"method trait-impl\"><a href=\"#method.chunk\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chunk</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Returns a slice starting at the current position and of length between 0\nand <code>Buf::remaining()</code>. Note that this <em>can</em> return a shorter slice (this\nallows non-continuous internal representation). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance\" class=\"method trait-impl\"><a href=\"#method.advance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">advance</a>(&amp;mut self, cnt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Advance the internal cursor of the Buf <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_to_bytes\" class=\"method trait-impl\"><a href=\"#method.copy_to_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">copy_to_bytes</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Bytes</h4></section></summary><div class='docblock'>Consumes <code>len</code> bytes inside self and returns new instance of <code>Bytes</code>\nwith this data. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunks_vectored\" class=\"method trait-impl\"><a href=\"#method.chunks_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chunks_vectored</a>&lt;'a&gt;(&amp;'a self, dst: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'a&gt;]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Fills <code>dst</code> with potentially multiple slices starting at <code>self</code>’s\ncurrent position. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_remaining\" class=\"method trait-impl\"><a href=\"#method.has_remaining\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_remaining</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if there are any more bytes to consume <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_to_slice\" class=\"method trait-impl\"><a href=\"#method.copy_to_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">copy_to_slice</a>(&amp;mut self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Copies bytes from <code>self</code> into <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u8\" class=\"method trait-impl\"><a href=\"#method.get_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u8</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Gets an unsigned 8 bit integer from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i8\" class=\"method trait-impl\"><a href=\"#method.get_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i8</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Gets a signed 8 bit integer from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u16\" class=\"method trait-impl\"><a href=\"#method.get_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u16</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u16_le\" class=\"method trait-impl\"><a href=\"#method.get_u16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u16_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u16_ne\" class=\"method trait-impl\"><a href=\"#method.get_u16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u16_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i16\" class=\"method trait-impl\"><a href=\"#method.get_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i16</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i16_le\" class=\"method trait-impl\"><a href=\"#method.get_i16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i16_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i16_ne\" class=\"method trait-impl\"><a href=\"#method.get_i16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i16_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u32\" class=\"method trait-impl\"><a href=\"#method.get_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in the big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u32_le\" class=\"method trait-impl\"><a href=\"#method.get_u32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u32_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in the little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u32_ne\" class=\"method trait-impl\"><a href=\"#method.get_u32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u32_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i32\" class=\"method trait-impl\"><a href=\"#method.get_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i32_le\" class=\"method trait-impl\"><a href=\"#method.get_i32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i32_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i32_ne\" class=\"method trait-impl\"><a href=\"#method.get_i32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i32_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u64\" class=\"method trait-impl\"><a href=\"#method.get_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u64_le\" class=\"method trait-impl\"><a href=\"#method.get_u64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u64_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u64_ne\" class=\"method trait-impl\"><a href=\"#method.get_u64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u64_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i64\" class=\"method trait-impl\"><a href=\"#method.get_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i64_le\" class=\"method trait-impl\"><a href=\"#method.get_i64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i64_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i64_ne\" class=\"method trait-impl\"><a href=\"#method.get_i64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i64_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u128\" class=\"method trait-impl\"><a href=\"#method.get_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u128</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u128_le\" class=\"method trait-impl\"><a href=\"#method.get_u128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u128_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_u128_ne\" class=\"method trait-impl\"><a href=\"#method.get_u128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_u128_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i128\" class=\"method trait-impl\"><a href=\"#method.get_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i128</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i128_le\" class=\"method trait-impl\"><a href=\"#method.get_i128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i128_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_i128_ne\" class=\"method trait-impl\"><a href=\"#method.get_i128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_i128_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uint\" class=\"method trait-impl\"><a href=\"#method.get_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_uint</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uint_le\" class=\"method trait-impl\"><a href=\"#method.get_uint_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_uint_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_uint_ne\" class=\"method trait-impl\"><a href=\"#method.get_uint_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_uint_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_int\" class=\"method trait-impl\"><a href=\"#method.get_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_int</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_int_le\" class=\"method trait-impl\"><a href=\"#method.get_int_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_int_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_int_ne\" class=\"method trait-impl\"><a href=\"#method.get_int_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_int_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f32\" class=\"method trait-impl\"><a href=\"#method.get_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f32_le\" class=\"method trait-impl\"><a href=\"#method.get_f32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f32_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f32_ne\" class=\"method trait-impl\"><a href=\"#method.get_f32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f32_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f64\" class=\"method trait-impl\"><a href=\"#method.get_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f64_le\" class=\"method trait-impl\"><a href=\"#method.get_f64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f64_le</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_f64_ne\" class=\"method trait-impl\"><a href=\"#method.get_f64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_f64_ne</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_copy_to_slice\" class=\"method trait-impl\"><a href=\"#method.try_copy_to_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_copy_to_slice</a>(&amp;mut self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Copies bytes from <code>self</code> into <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u8\" class=\"method trait-impl\"><a href=\"#method.try_get_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u8</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 8 bit integer from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i8\" class=\"method trait-impl\"><a href=\"#method.try_get_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i8</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i8.html\">i8</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 8 bit integer from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u16\" class=\"method trait-impl\"><a href=\"#method.try_get_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u16</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u16_le\" class=\"method trait-impl\"><a href=\"#method.try_get_u16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u16_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u16_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_u16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u16_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 16 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i16\" class=\"method trait-impl\"><a href=\"#method.try_get_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i16</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i16_le\" class=\"method trait-impl\"><a href=\"#method.try_get_i16_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i16_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an signed 16 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i16_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_i16_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i16_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 16 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u32\" class=\"method trait-impl\"><a href=\"#method.try_get_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u32</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u32_le\" class=\"method trait-impl\"><a href=\"#method.try_get_u32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u32_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u32_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_u32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u32_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 32 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i32\" class=\"method trait-impl\"><a href=\"#method.try_get_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i32</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i32_le\" class=\"method trait-impl\"><a href=\"#method.try_get_i32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i32_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i32_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_i32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i32_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 32 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u64\" class=\"method trait-impl\"><a href=\"#method.try_get_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u64</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u64_le\" class=\"method trait-impl\"><a href=\"#method.try_get_u64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u64_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u64_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_u64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u64_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 64 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i64\" class=\"method trait-impl\"><a href=\"#method.try_get_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i64</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i64_le\" class=\"method trait-impl\"><a href=\"#method.try_get_i64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i64_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i64_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_i64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i64_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 64 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u128\" class=\"method trait-impl\"><a href=\"#method.try_get_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u128</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u128_le\" class=\"method trait-impl\"><a href=\"#method.try_get_u128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u128_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_u128_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_u128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_u128_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned 128 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i128\" class=\"method trait-impl\"><a href=\"#method.try_get_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i128</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i128_le\" class=\"method trait-impl\"><a href=\"#method.try_get_i128_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i128_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_i128_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_i128_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_i128_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed 128 bit integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_uint\" class=\"method trait-impl\"><a href=\"#method.try_get_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_uint</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_uint_le\" class=\"method trait-impl\"><a href=\"#method.try_get_uint_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_uint_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_uint_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_uint_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_uint_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an unsigned n-byte integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_int\" class=\"method trait-impl\"><a href=\"#method.try_get_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_int</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_int_le\" class=\"method trait-impl\"><a href=\"#method.try_get_int_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_int_le</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_int_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_int_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_int_ne</a>(&amp;mut self, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets a signed n-byte integer from <code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f32\" class=\"method trait-impl\"><a href=\"#method.try_get_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f32</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f32_le\" class=\"method trait-impl\"><a href=\"#method.try_get_f32_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f32_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f32_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_f32_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f32_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 single-precision (4 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f64\" class=\"method trait-impl\"><a href=\"#method.try_get_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f64</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in big-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f64_le\" class=\"method trait-impl\"><a href=\"#method.try_get_f64_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f64_le</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in little-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_f64_ne\" class=\"method trait-impl\"><a href=\"#method.try_get_f64_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_get_f64_ne</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>, TryGetError&gt;</h4></section></summary><div class='docblock'>Gets an IEEE754 double-precision (8 bytes) floating point number from\n<code>self</code> in native-endian byte order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">take</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Take&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which will read at most <code>limit</code> bytes from <code>self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chain</a>&lt;U&gt;(self, next: U) -&gt; Chain&lt;Self, U&gt;<div class=\"where\">where\n    U: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which will chain this buffer with another. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reader\" class=\"method trait-impl\"><a href=\"#method.reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reader</a>(self) -&gt; Reader&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adaptor which implements the <code>Read</code> trait for <code>self</code>. <a>Read more</a></div></details></div></details>","Buf","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BufExt-for-Bytes\" class=\"impl\"><a href=\"#impl-BufExt-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BufExt for Bytes</h3></section></summary><div class=\"impl-items\"><section id=\"method.get_bytes_nul\" class=\"method trait-impl\"><a href=\"#method.get_bytes_nul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_bytes_nul</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Bytes, Error&gt;</h4></section><section id=\"method.get_bytes\" class=\"method trait-impl\"><a href=\"#method.get_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_bytes</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Bytes</h4></section><section id=\"method.get_str_nul\" class=\"method trait-impl\"><a href=\"#method.get_str_nul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_str_nul</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, Error&gt;</h4></section><section id=\"method.get_str\" class=\"method trait-impl\"><a href=\"#method.get_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_str</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, Error&gt;</h4></section></div></details>","BufExt","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bytes\" class=\"impl\"><a href=\"#impl-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">new</a>() -&gt; Bytes</h4></section></summary><div class=\"docblock\"><p>Creates a new empty <code>Bytes</code>.</p>\n<p>This will not allocate and the returned <code>Bytes</code> handle will be empty.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::Bytes;\n\n<span class=\"kw\">let </span>b = Bytes::new();\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>b[..], <span class=\"string\">b\"\"</span>);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_static\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">from_static</a>(bytes: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; Bytes</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>Bytes</code> from a static slice.</p>\n<p>The returned <code>Bytes</code> will point directly to the static slice. There is\nno allocating or copying.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::Bytes;\n\n<span class=\"kw\">let </span>b = Bytes::from_static(<span class=\"string\">b\"hello\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>b[..], <span class=\"string\">b\"hello\"</span>);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_owner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_owner</a>&lt;T&gt;(owner: T) -&gt; Bytes<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Create [Bytes] with a buffer whose lifetime is controlled\nvia an explicit owner.</p>\n<p>A common use case is to zero-copy construct from mapped memory.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::Bytes;\n<span class=\"kw\">use </span>memmap2::Mmap;\n\n<span class=\"kw\">let </span>file = File::open(<span class=\"string\">\"upload_bundle.tar.gz\"</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>mmap = <span class=\"kw\">unsafe </span>{ Mmap::map(<span class=\"kw-2\">&amp;</span>file) }<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = Bytes::from_owner(mmap);</code></pre></div>\n<p>The <code>owner</code> will be transferred to the constructed [Bytes] object, which\nwill ensure it is dropped once all remaining clones of the constructed\nobject are dropped. The owner will then be responsible for dropping the\nspecified region of memory as part of its <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> implementation.</p>\n<p>Note that converting [Bytes] constructed from an owner into a [BytesMut]\nwill always create a deep copy of the buffer into newly allocated memory.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of bytes contained in this <code>Bytes</code>.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::Bytes;\n\n<span class=\"kw\">let </span>b = Bytes::from(<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"hello\"</span>[..]);\n<span class=\"macro\">assert_eq!</span>(b.len(), <span class=\"number\">5</span>);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the <code>Bytes</code> has a length of 0.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::Bytes;\n\n<span class=\"kw\">let </span>b = Bytes::new();\n<span class=\"macro\">assert!</span>(b.is_empty());</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_unique\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_unique</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if this is the only reference to the data and\n<code>Into&lt;BytesMut&gt;</code> would avoid cloning the underlying buffer.</p>\n<p>Always returns false if the data is backed by a <a href=\"Bytes::from_static\">static slice</a>,\nor an <a href=\"Bytes::from_owner\">owner</a>.</p>\n<p>The result of this method may be invalidated immediately if another\nthread clones this value while this is being called. Ensure you have\nunique access to this value (<code>&amp;mut Bytes</code>) first if you need to be\ncertain the result is valid (i.e. for safety reasons).</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::Bytes;\n\n<span class=\"kw\">let </span>a = Bytes::from(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n<span class=\"macro\">assert!</span>(a.is_unique());\n<span class=\"kw\">let </span>b = a.clone();\n<span class=\"macro\">assert!</span>(!a.is_unique());</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">copy_from_slice</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; Bytes</h4></section></summary><div class=\"docblock\"><p>Creates <code>Bytes</code> instance from slice, by copying it.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">slice</a>(&amp;self, range: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; Bytes</h4></section></summary><div class=\"docblock\"><p>Returns a slice of self for the provided range.</p>\n<p>This will increment the reference count for the underlying memory and\nreturn a new <code>Bytes</code> handle set to the slice.</p>\n<p>This operation is <code>O(1)</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::Bytes;\n\n<span class=\"kw\">let </span>a = Bytes::from(<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"hello world\"</span>[..]);\n<span class=\"kw\">let </span>b = a.slice(<span class=\"number\">2</span>..<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>b[..], <span class=\"string\">b\"llo\"</span>);</code></pre></div><h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Requires that <code>begin &lt;= end</code> and <code>end &lt;= self.len()</code>, otherwise slicing\nwill panic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">slice_ref</a>(&amp;self, subset: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; Bytes</h4></section></summary><div class=\"docblock\"><p>Returns a slice of self that is equivalent to the given <code>subset</code>.</p>\n<p>When processing a <code>Bytes</code> buffer with other tools, one often gets a\n<code>&amp;[u8]</code> which is in fact a slice of the <code>Bytes</code>, i.e. a subset of it.\nThis function turns that <code>&amp;[u8]</code> into another <code>Bytes</code>, as if one had\ncalled <code>self.slice()</code> with the offsets that correspond to <code>subset</code>.</p>\n<p>This operation is <code>O(1)</code>.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::Bytes;\n\n<span class=\"kw\">let </span>bytes = Bytes::from(<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"012345678\"</span>[..]);\n<span class=\"kw\">let </span>as_slice = bytes.as_ref();\n<span class=\"kw\">let </span>subset = <span class=\"kw-2\">&amp;</span>as_slice[<span class=\"number\">2</span>..<span class=\"number\">6</span>];\n<span class=\"kw\">let </span>subslice = bytes.slice_ref(<span class=\"kw-2\">&amp;</span>subset);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>subslice[..], <span class=\"string\">b\"2345\"</span>);</code></pre></div><h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Requires that the given <code>sub</code> slice is in fact contained within the\n<code>Bytes</code> buffer; otherwise this function will panic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_off\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">split_off</a>(&amp;mut self, at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Bytes</h4></section></summary><div class=\"docblock\"><p>Splits the bytes into two at the given index.</p>\n<p>Afterwards <code>self</code> contains elements <code>[0, at)</code>, and the returned <code>Bytes</code>\ncontains elements <code>[at, len)</code>. It’s guaranteed that the memory does not\nmove, that is, the address of <code>self</code> does not change, and the address of\nthe returned slice is <code>at</code> bytes after that.</p>\n<p>This is an <code>O(1)</code> operation that just increases the reference count and\nsets a few indices.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::Bytes;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = Bytes::from(<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"hello world\"</span>[..]);\n<span class=\"kw\">let </span>b = a.split_off(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>a[..], <span class=\"string\">b\"hello\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>b[..], <span class=\"string\">b\" world\"</span>);</code></pre></div><h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p>Panics if <code>at &gt; len</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_to\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">split_to</a>(&amp;mut self, at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Bytes</h4></section></summary><div class=\"docblock\"><p>Splits the bytes into two at the given index.</p>\n<p>Afterwards <code>self</code> contains elements <code>[at, len)</code>, and the returned\n<code>Bytes</code> contains elements <code>[0, at)</code>.</p>\n<p>This is an <code>O(1)</code> operation that just increases the reference count and\nsets a few indices.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::Bytes;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = Bytes::from(<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"hello world\"</span>[..]);\n<span class=\"kw\">let </span>b = a.split_to(<span class=\"number\">5</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>a[..], <span class=\"string\">b\" world\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>b[..], <span class=\"string\">b\"hello\"</span>);</code></pre></div><h5 id=\"panics-3\"><a class=\"doc-anchor\" href=\"#panics-3\">§</a>Panics</h5>\n<p>Panics if <code>at &gt; len</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">truncate</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shortens the buffer, keeping the first <code>len</code> bytes and dropping the\nrest.</p>\n<p>If <code>len</code> is greater than the buffer’s current length, this has no\neffect.</p>\n<p>The <a href=\"%60Self::split_off()%60\">split_off</a> method can emulate <code>truncate</code>, but this causes the\nexcess bytes to be returned instead of dropped.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::Bytes;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buf = Bytes::from(<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"hello world\"</span>[..]);\nbuf.truncate(<span class=\"number\">5</span>);\n<span class=\"macro\">assert_eq!</span>(buf, <span class=\"string\">b\"hello\"</span>[..]);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clears the buffer, removing all data.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::Bytes;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buf = Bytes::from(<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"hello world\"</span>[..]);\nbuf.clear();\n<span class=\"macro\">assert!</span>(buf.is_empty());</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_into_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_into_mut</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;BytesMut, Bytes&gt;</h4></section></summary><div class=\"docblock\"><p>Try to convert self into <code>BytesMut</code>.</p>\n<p>If <code>self</code> is unique for the entire original buffer, this will succeed\nand return a <code>BytesMut</code> with the contents of <code>self</code> without copying.\nIf <code>self</code> is not unique for the entire original buffer, this will fail\nand return self.</p>\n<p>This will also always fail if the buffer was constructed via either\n<a href=\"Bytes::from_owner\">from_owner</a> or <a href=\"Bytes::from_static\">from_static</a>.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>bytes::{Bytes, BytesMut};\n\n<span class=\"kw\">let </span>bytes = Bytes::from(<span class=\"string\">b\"hello\"</span>.to_vec());\n<span class=\"macro\">assert_eq!</span>(bytes.try_into_mut(), <span class=\"prelude-val\">Ok</span>(BytesMut::from(<span class=\"kw-2\">&amp;</span><span class=\"string\">b\"hello\"</span>[..])));</code></pre></div></div></details></div></details>",0,"servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ChunkReader-for-Bytes\" class=\"impl\"><a href=\"#impl-ChunkReader-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ChunkReader for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.T\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.T\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">T</a> = Reader&lt;Bytes&gt;</h4></section></summary><div class='docblock'>The concrete type of reader returned by this trait</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_read\" class=\"method trait-impl\"><a href=\"#method.get_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_read</a>(\n    &amp;self,\n    start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Bytes as ChunkReader&gt;::T, ParquetError&gt;</h4></section></summary><div class='docblock'>Get a <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\"><code>Read</code></a> instance starting at the provided file offset <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_bytes\" class=\"method trait-impl\"><a href=\"#method.get_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_bytes</a>(&amp;self, start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Bytes, ParquetError&gt;</h4></section></summary><div class='docblock'>Get a range of data in memory as [<code>Bytes</code>] <a>Read more</a></div></details></div></details>","ChunkReader","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ChunkReader-for-Bytes\" class=\"impl\"><a href=\"#impl-ChunkReader-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ChunkReader for Bytes</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.T\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.T\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">T</a> = Reader&lt;Bytes&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Get total length of bytes. Useful for parsing the metadata located at\nthe end of the file.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_read\" class=\"method trait-impl\"><a href=\"#method.get_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_read</a>(\n    &amp;self,\n    offset_from_start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;Bytes as ChunkReader&gt;::T, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Get a reader starting at a specific offset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_bytes\" class=\"method trait-impl\"><a href=\"#method.get_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_bytes</a>(&amp;self, offset_from_start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Bytes, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read bytes from an offset with specific length.</div></details></div></details>","ChunkReader","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clear-for-Bytes\" class=\"impl\"><a class=\"src rightside\" href=\"src/servers/repeated_field.rs.html#67-71\">Source</a><a href=\"#impl-Clear-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"servers/repeated_field/trait.Clear.html\" title=\"trait servers::repeated_field::Clear\">Clear</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/servers/repeated_field.rs.html#68-70\">Source</a><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"servers/repeated_field/trait.Clear.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Clear this make, make it equivalent to newly created object.</div></details></div></details>","Clear","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clear-for-Bytes\" class=\"impl\"><a href=\"#impl-Clear-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Clear for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Clear this make, make it equivalent to newly created object.</div></details></div></details>","Clear","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Bytes\" class=\"impl\"><a href=\"#impl-Clone-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Bytes</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Bytes\" class=\"impl\"><a href=\"#impl-Debug-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Bytes\" class=\"impl\"><a href=\"#impl-Default-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Bytes</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Bytes, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DeserializeOctets%3C'de%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-DeserializeOctets%3C'de%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; DeserializeOctets&lt;'de&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Visitor\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Visitor\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Visitor</a> = BufVisitor&lt;Bytes&gt;</h4></section><section id=\"method.deserialize_octets\" class=\"method trait-impl\"><a href=\"#method.deserialize_octets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_octets</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Bytes, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section><section id=\"method.deserialize_with_visitor\" class=\"method trait-impl\"><a href=\"#method.deserialize_with_visitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_with_visitor</a>&lt;D, V&gt;(\n    deserializer: D,\n    visitor: V,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;V as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Visitor.html#associatedtype.Value\" title=\"type serde::de::Visitor::Value\">Value</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,\n    V: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Visitor.html\" title=\"trait serde::de::Visitor\">Visitor</a>&lt;'de&gt;,</div></h4></section><section id=\"method.visitor\" class=\"method trait-impl\"><a href=\"#method.visitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visitor</a>() -&gt; &lt;Bytes as DeserializeOctets&lt;'de&gt;&gt;::Visitor</h4></section></div></details>","DeserializeOctets<'de>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-Bytes\" class=\"impl\"><a href=\"#impl-Drop-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8%5D%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3C%26%5Bu8%5D%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(slice: &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'static [u8]>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26str%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3C%26str%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(slice: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'static str>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBox%3C%5Bu8%5D%3E%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3CBox%3C%5Bu8%5D%3E%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(slice: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Box<[u8]>>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CByteStr%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3CByteStr%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ByteStr&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: ByteStr) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ByteStr>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBytes%3E-for-Bytes\" class=\"impl\"><a class=\"src rightside\" href=\"src/common_base/bytes.rs.html#23\">Source</a><a href=\"#impl-From%3CBytes%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"common_base/bytes/struct.Bytes.html\" title=\"struct common_base::bytes::Bytes\">Bytes</a>&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/common_base/bytes.rs.html#24\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"common_base/bytes/struct.Bytes.html\" title=\"struct common_base::bytes::Bytes\">Bytes</a>) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Bytes>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBytesMut%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3CBytesMut%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BytesMut&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: BytesMut) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BytesMut>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCustom%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3CCustom%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Custom&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: Custom) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Custom>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMetadataKey%3CVE%3E%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3CMetadataKey%3CVE%3E%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;VE&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MetadataKey&lt;VE&gt;&gt; for Bytes<div class=\"where\">where\n    VE: ValueEncoding,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(name: MetadataKey&lt;VE&gt;) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MetadataKey<VE>>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMetadataValue%3CVE%3E%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3CMetadataValue%3CVE%3E%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;VE&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MetadataValue&lt;VE&gt;&gt; for Bytes<div class=\"where\">where\n    VE: ValueEncoding,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: MetadataValue&lt;VE&gt;) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MetadataValue<VE>>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNomBytes%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3CNomBytes%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;NomBytes&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: NomBytes) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NomBytes>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPutPayload%3E-for-Bytes\" class=\"impl\"><a class=\"src rightside\" href=\"src/object_store/payload.rs.html#165\">Source</a><a href=\"#impl-From%3CPutPayload%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"object_store/payload/struct.PutPayload.html\" title=\"struct object_store::payload::PutPayload\">PutPayload</a>&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/object_store/payload.rs.html#166\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"object_store/payload/struct.PutPayload.html\" title=\"struct object_store::payload::PutPayload\">PutPayload</a>) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PutPayload>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CReasonPhrase%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3CReasonPhrase%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ReasonPhrase&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(reason: ReasonPhrase) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ReasonPhrase>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignature%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3CSignature%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Signature&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: Signature) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Signature>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignature%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3CSignature%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Signature&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: Signature) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Signature>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CString%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3CString%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(s: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<String>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVec%3Cu8%3E%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-From%3CVec%3Cu8%3E%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(vec: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; Bytes</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vec<u8>>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBuilder-for-Bytes\" class=\"impl\"><a href=\"#impl-FromBuilder-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromBuilder for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Builder\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Builder\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Builder</a> = BytesMut</h4></section></summary><div class='docblock'>The type of builder this octets type can be created from.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_builder\" class=\"method trait-impl\"><a href=\"#method.from_builder\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_builder</a>(builder: &lt;Bytes as FromBuilder&gt;::Builder) -&gt; Bytes</h4></section></summary><div class='docblock'>Creates an octets value from an octets builder.</div></details></div></details>","FromBuilder","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3Cu8%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-FromIterator%3Cu8%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;T&gt;(into_iter: T) -&gt; Bytes<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<u8>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRequest%3CS%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-FromRequest%3CS%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; FromRequest&lt;S&gt; for Bytes<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Rejection\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Rejection\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Rejection</a> = BytesRejection</h4></section></summary><div class='docblock'>If the extractor fails it’ll use this “rejection” type. A rejection is\na kind of error that can be converted into a response.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_request\" class=\"method trait-impl\"><a href=\"#method.from_request\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a class=\"fn\">from_request</a>(\n    req: Request&lt;Body&gt;,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Bytes, &lt;Bytes as FromRequest&lt;S&gt;&gt;::Rejection&gt;</h4></section></summary><div class='docblock'>Perform the extraction.</div></details></div></details>","FromRequest<S>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Bytes\" class=\"impl\"><a href=\"#impl-Hash-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoBuilder-for-Bytes\" class=\"impl\"><a href=\"#impl-IntoBuilder-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoBuilder for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Builder\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Builder\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Builder</a> = BytesMut</h4></section></summary><div class='docblock'>The type of octets builder this octets type can be converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_builder\" class=\"method trait-impl\"><a href=\"#method.into_builder\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_builder</a>(self) -&gt; &lt;Bytes as IntoBuilder&gt;::Builder</h4></section></summary><div class='docblock'>Converts an octets value into an octets builder.</div></details></div></details>","IntoBuilder","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Bytes\" class=\"impl\"><a href=\"#impl-IntoIterator-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = IntoIter&lt;Bytes&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;Bytes as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoResponse-for-Bytes\" class=\"impl\"><a href=\"#impl-IntoResponse-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoResponse for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response\" class=\"method trait-impl\"><a href=\"#method.into_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_response</a>(self) -&gt; Response&lt;Body&gt;</h4></section></summary><div class='docblock'>Create a response.</div></details></div></details>","IntoResponse","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoSource-for-Bytes\" class=\"impl\"><a href=\"#impl-IntoSource-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoSource for Bytes</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Source\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Source\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Source</a> = BytesSource</h4></section><section id=\"method.into_source\" class=\"method trait-impl\"><a href=\"#method.into_source\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_source</a>(self) -&gt; &lt;Bytes as IntoSource&gt;::Source</h4></section></div></details>","IntoSource","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Length-for-Bytes\" class=\"impl\"><a href=\"#impl-Length-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Length for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Returns the amount of bytes of the inner source.</div></details></div></details>","Length","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-Bytes\" class=\"impl\"><a href=\"#impl-LowerHex-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Message-for-Bytes\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/types.rs.html#366\">Source</a><a href=\"#impl-Message-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html\" title=\"trait prost::message::Message\">Message</a> for Bytes</h3><div class=\"docblock\"><p><code>google.protobuf.BytesValue</code></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/types.rs.html#391\">Source</a><a href=\"#method.encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#tymethod.encoded_len\" class=\"fn\">encoded_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the encoded length of the message without a length delimiter.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/types.rs.html#398\">Source</a><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Clears the message, resetting all fields to their default.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#50-53\">Source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.encode\" class=\"fn\">encode</a>&lt;B&gt;(&amp;self, buf: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut B</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.12.6/prost/error/struct.EncodeError.html\" title=\"struct prost::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    B: BufMut,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message to a buffer. <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.encode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#66-68\">Source</a><a href=\"#method.encode_to_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.encode_to_vec\" class=\"fn\">encode_to_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message to a newly allocated buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#79-82\">Source</a><a href=\"#method.encode_length_delimited\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.encode_length_delimited\" class=\"fn\">encode_length_delimited</a>&lt;B&gt;(&amp;self, buf: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut B</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.12.6/prost/error/struct.EncodeError.html\" title=\"struct prost::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    B: BufMut,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message with a length-delimiter to a buffer. <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.encode_length_delimited\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_length_delimited_to_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#96-98\">Source</a><a href=\"#method.encode_length_delimited_to_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.encode_length_delimited_to_vec\" class=\"fn\">encode_length_delimited_to_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message with a length-delimiter to a newly allocated buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#111-114\">Source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.decode\" class=\"fn\">decode</a>&lt;B&gt;(buf: B) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/prost/0.12.6/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    B: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Decodes an instance of the message from a buffer. <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#121-124\">Source</a><a href=\"#method.decode_length_delimited\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.decode_length_delimited\" class=\"fn\">decode_length_delimited</a>&lt;B&gt;(buf: B) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/prost/0.12.6/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    B: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Decodes a length-delimited instance of the message from the buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#134-137\">Source</a><a href=\"#method.merge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.merge\" class=\"fn\">merge</a>&lt;B&gt;(&amp;mut self, buf: B) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.12.6/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    B: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Decodes an instance of the message from a buffer, and merges it into <code>self</code>. <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.merge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.12.6/src/prost/message.rs.html#149-152\">Source</a><a href=\"#method.merge_length_delimited\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.12.6/prost/message/trait.Message.html#method.merge_length_delimited\" class=\"fn\">merge_length_delimited</a>&lt;B&gt;(&amp;mut self, buf: B) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.12.6/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    B: Buf,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Decodes a length-delimited instance of the message from buffer, and\nmerges it into <code>self</code>.</div></details></div></details>","Message","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Message-for-Bytes\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/types.rs.html#401\">Source</a><a href=\"#impl-Message-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html\" title=\"trait prost::message::Message\">Message</a> for Bytes</h3><div class=\"docblock\"><p><code>google.protobuf.BytesValue</code></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/types.rs.html#420\">Source</a><a href=\"#method.encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#tymethod.encoded_len\" class=\"fn\">encoded_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the encoded length of the message without a length delimiter.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/types.rs.html#427\">Source</a><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Clears the message, resetting all fields to their default.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/message.rs.html#48-50\">Source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#method.encode\" class=\"fn\">encode</a>(&amp;self, buf: &amp;mut impl BufMut) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.13.5/prost/error/struct.EncodeError.html\" title=\"struct prost::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message to a buffer. <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#method.encode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/message.rs.html#63-65\">Source</a><a href=\"#method.encode_to_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#method.encode_to_vec\" class=\"fn\">encode_to_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message to a newly allocated buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/message.rs.html#76-78\">Source</a><a href=\"#method.encode_length_delimited\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#method.encode_length_delimited\" class=\"fn\">encode_length_delimited</a>(\n    &amp;self,\n    buf: &amp;mut impl BufMut,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.13.5/prost/error/struct.EncodeError.html\" title=\"struct prost::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message with a length-delimiter to a buffer. <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#method.encode_length_delimited\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_length_delimited_to_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/message.rs.html#92-94\">Source</a><a href=\"#method.encode_length_delimited_to_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#method.encode_length_delimited_to_vec\" class=\"fn\">encode_length_delimited_to_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message with a length-delimiter to a newly allocated buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/message.rs.html#107-109\">Source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#method.decode\" class=\"fn\">decode</a>(buf: impl Buf) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/prost/0.13.5/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Decodes an instance of the message from a buffer. <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#method.decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/message.rs.html#116-118\">Source</a><a href=\"#method.decode_length_delimited\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#method.decode_length_delimited\" class=\"fn\">decode_length_delimited</a>(buf: impl Buf) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/prost/0.13.5/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Decodes a length-delimited instance of the message from the buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/message.rs.html#128-130\">Source</a><a href=\"#method.merge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#method.merge\" class=\"fn\">merge</a>(&amp;mut self, buf: impl Buf) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.13.5/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Decodes an instance of the message from a buffer, and merges it into <code>self</code>. <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#method.merge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/message.rs.html#142-144\">Source</a><a href=\"#method.merge_length_delimited\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html#method.merge_length_delimited\" class=\"fn\">merge_length_delimited</a>(&amp;mut self, buf: impl Buf) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.13.5/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Decodes a length-delimited instance of the message from buffer, and\nmerges it into <code>self</code>.</div></details></div></details>","Message","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Name-for-Bytes\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/types.rs.html#433\">Source</a><a href=\"#impl-Name-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/prost/0.13.5/prost/name/trait.Name.html\" title=\"trait prost::name::Name\">Name</a> for Bytes</h3><div class=\"docblock\"><p><code>google.protobuf.BytesValue</code></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.NAME\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/types.rs.html#434\">Source</a><a href=\"#associatedconstant.NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/prost/0.13.5/prost/name/trait.Name.html#associatedconstant.NAME\" class=\"constant\">NAME</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> = &quot;BytesValue&quot;</h4></section></summary><div class='docblock'>Simple name for this <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html\" title=\"trait prost::message::Message\"><code>Message</code></a>.\nThis name is the same as it appears in the source .proto file, e.g. <code>FooBar</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.PACKAGE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/types.rs.html#435\">Source</a><a href=\"#associatedconstant.PACKAGE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/prost/0.13.5/prost/name/trait.Name.html#associatedconstant.PACKAGE\" class=\"constant\">PACKAGE</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> = &quot;google.protobuf&quot;</h4></section></summary><div class='docblock'>Package name this message type is contained in. They are domain-like\nand delimited by <code>.</code>, e.g. <code>google.protobuf</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_url\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/types.rs.html#437\">Source</a><a href=\"#method.type_url\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.13.5/prost/name/trait.Name.html#method.type_url\" class=\"fn\">type_url</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Type URL for this <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html\" title=\"trait prost::message::Message\"><code>Message</code></a>, which by default is the full name with a\nleading slash, but may also include a leading domain name, e.g.\n<code>type.googleapis.com/google.profile.Person</code>.\nThis can be used when serializing into the <code>google.protobuf.Any</code> type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.full_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.13.5/src/prost/name.rs.html#23\">Source</a><a href=\"#method.full_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.13.5/prost/name/trait.Name.html#method.full_name\" class=\"fn\">full_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Fully-qualified unique name for this <a href=\"https://docs.rs/prost/0.13.5/prost/message/trait.Message.html\" title=\"trait prost::message::Message\"><code>Message</code></a>.\nIt’s prefixed with the package name and names of any parent messages,\ne.g. <code>google.rpc.BadRequest.FieldViolation</code>.\nBy default, this is the package name followed by the message name.\nFully-qualified names must be unique within a domain of Type URLs.</div></details></div></details>","Name","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octets-for-Bytes\" class=\"impl\"><a href=\"#impl-Octets-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Octets for Bytes</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Range\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Range\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Range</a>&lt;'a&gt; = Bytes</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.range\" class=\"method trait-impl\"><a href=\"#method.range\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">range</a>(&amp;self, range: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;) -&gt; &lt;Bytes as Octets&gt;::Range&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns a sub-sequence or ‘range’ of the sequence. <a>Read more</a></div></details></div></details>","Octets","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OctetsFrom%3CSource%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-OctetsFrom%3CSource%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Source&gt; OctetsFrom&lt;Source&gt; for Bytes<div class=\"where\">where\n    Bytes: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Source&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_octets_from\" class=\"method trait-impl\"><a href=\"#method.try_octets_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_octets_from</a>(\n    source: Source,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Bytes, &lt;Bytes as OctetsFrom&lt;Source&gt;&gt;::Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.octets_from\" class=\"method trait-impl\"><a href=\"#method.octets_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">octets_from</a>(source: Source) -&gt; Self<div class=\"where\">where\n    Self::Error: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;,</div></h4></section></summary><div class='docblock'>Performs an infallible conversion.</div></details></div></details>","OctetsFrom<Source>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Bytes\" class=\"impl\"><a href=\"#impl-Ord-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;Bytes) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1021-1023\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1060-1062\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1086-1088\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26T%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialEq%3C%26T%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt; for Bytes<div class=\"where\">where\n    Bytes: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;T&gt;,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<&'a T>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5Bu8%5D%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialEq%3C%5Bu8%5D%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<[u8]>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBytesMut%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialEq%3CBytesMut%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;BytesMut&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;BytesMut) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<BytesMut>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CString%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialEq%3CString%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<String>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3Cu8%3E%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialEq%3CVec%3Cu8%3E%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Vec<u8>>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cstr%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialEq%3Cstr%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<str>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialEq-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Bytes) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3C%26T%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialOrd%3C%26T%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>&gt; for Bytes<div class=\"where\">where\n    Bytes: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;T&gt;,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1398\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1416\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1434\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1452\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<&'a T>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3C%5Bu8%5D%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialOrd%3C%5Bu8%5D%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1398\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1416\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1434\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1452\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<[u8]>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CString%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialOrd%3CString%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1398\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1416\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1434\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1452\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<String>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CVec%3Cu8%3E%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialOrd%3CVec%3Cu8%3E%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1398\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1416\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1434\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1452\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Vec<u8>>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3Cstr%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialOrd%3Cstr%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1398\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1416\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1434\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1452\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<str>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Bytes\" class=\"impl\"><a href=\"#impl-PartialOrd-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;Bytes) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1398\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1416\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1434\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1452\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProtobufValue-for-Bytes\" class=\"impl\"><a href=\"#impl-ProtobufValue-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ProtobufValue for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_ref</a>(&amp;self) -&gt; ReflectValueRef&lt;'_&gt;</h4></section></summary><div class='docblock'>As ref</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Convert to <code>Any</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_non_zero\" class=\"method trait-impl\"><a href=\"#method.is_non_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_non_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is value non-zero?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref_copy\" class=\"method trait-impl\"><a href=\"#method.as_ref_copy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_ref_copy</a>(&amp;self) -&gt; ReflectValueRef&lt;'static&gt;</h4></section></summary><div class='docblock'>Return <code>ProtobufValueRef</code> if self is <code>Copy</code>. <a>Read more</a></div></details></div></details>","ProtobufValue","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProtocolDecode%3C'_%3E-for-Bytes\" class=\"impl\"><a href=\"#impl-ProtocolDecode%3C'_%3E-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ProtocolDecode&lt;'_&gt; for Bytes</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode_with\" class=\"method trait-impl\"><a href=\"#method.decode_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_with</a>(buf: Bytes, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Bytes, Error&gt;</h4></section><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(buf: Bytes) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Error&gt;<div class=\"where\">where\n    Self: ProtocolDecode&lt;'de&gt;,</div></h4></section></div></details>","ProtocolDecode<'_>","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-Bytes\" class=\"impl\"><a href=\"#impl-Read-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Read for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a class=\"fn\">read</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Buffer, Error&gt;</h4></section></summary><div class='docblock'>Read at the given offset with the given size.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_all\" class=\"method trait-impl\"><a href=\"#method.read_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read_all</a>(\n    &amp;mut self,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Buffer, Error&gt;&gt; + MaybeSend</h4></section></summary><div class='docblock'>Read all data from the reader.</div></details></div></details>","Read","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReflectMessage-for-Bytes\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost-reflect/0.14.7/src/prost_reflect/reflect/wkt.rs.html#4505-4564\">Source</a><a href=\"#impl-ReflectMessage-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/prost-reflect/0.14.7/prost_reflect/reflect/trait.ReflectMessage.html\" title=\"trait prost_reflect::reflect::ReflectMessage\">ReflectMessage</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.descriptor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost-reflect/0.14.7/src/prost_reflect/reflect/wkt.rs.html#4505-4564\">Source</a><a href=\"#method.descriptor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost-reflect/0.14.7/prost_reflect/reflect/trait.ReflectMessage.html#tymethod.descriptor\" class=\"fn\">descriptor</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/prost-reflect/0.14.7/prost_reflect/descriptor/struct.MessageDescriptor.html\" title=\"struct prost_reflect::descriptor::MessageDescriptor\">MessageDescriptor</a></h4></section></summary><div class=\"docblock\"><p>Returns a descriptor for the <code>google.protobuf.BytesValue</code> message type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transcode_to_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost-reflect/0.14.7/src/prost_reflect/reflect/mod.rs.html#16-18\">Source</a><a href=\"#method.transcode_to_dynamic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost-reflect/0.14.7/prost_reflect/reflect/trait.ReflectMessage.html#method.transcode_to_dynamic\" class=\"fn\">transcode_to_dynamic</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/prost-reflect/0.14.7/prost_reflect/dynamic/struct.DynamicMessage.html\" title=\"struct prost_reflect::dynamic::DynamicMessage\">DynamicMessage</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts this message into an instance of <a href=\"https://docs.rs/prost-reflect/0.14.7/prost_reflect/dynamic/struct.DynamicMessage.html\" title=\"struct prost_reflect::dynamic::DynamicMessage\"><code>DynamicMessage</code></a> by going\nthrough the byte representation.</div></details></div></details>","ReflectMessage","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Bytes\" class=\"impl\"><a href=\"#impl-Serialize-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SerializeOctets-for-Bytes\" class=\"impl\"><a href=\"#impl-SerializeOctets-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl SerializeOctets for Bytes</h3></section></summary><div class=\"impl-items\"><section id=\"method.serialize_octets\" class=\"method trait-impl\"><a href=\"#method.serialize_octets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_octets</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section><section id=\"method.as_serialized_octets\" class=\"method trait-impl\"><a href=\"#method.as_serialized_octets\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_serialized_octets</a>(&amp;self) -&gt; AsSerializedOctets&lt;'_, Self&gt;</h4></section></div></details>","SerializeOctets","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Truncate-for-Bytes\" class=\"impl\"><a href=\"#impl-Truncate-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Truncate for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method trait-impl\"><a href=\"#method.truncate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">truncate</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Truncate the sequence to <code>len</code> octets. <a>Read more</a></div></details></div></details>","Truncate","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-Bytes\" class=\"impl\"><a href=\"#impl-UpperHex-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","servers::query_handler::grpc::RawRecordBatch"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-__Deref-for-Bytes\" class=\"impl\"><a href=\"#impl-__Deref-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for Bytes</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","servers::query_handler::grpc::RawRecordBatch"],["<section id=\"impl-Eq-for-Bytes\" class=\"impl\"><a href=\"#impl-Eq-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Bytes</h3></section>","Eq","servers::query_handler::grpc::RawRecordBatch"],["<section id=\"impl-Send-for-Bytes\" class=\"impl\"><a href=\"#impl-Send-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for Bytes</h3></section>","Send","servers::query_handler::grpc::RawRecordBatch"],["<section id=\"impl-Sync-for-Bytes\" class=\"impl\"><a href=\"#impl-Sync-for-Bytes\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for Bytes</h3></section>","Sync","servers::query_handler::grpc::RawRecordBatch"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[228472]}