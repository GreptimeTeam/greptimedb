CREATE TABLE my_table (
  a INT PRIMARY KEY,
  b STRING,
  ts TIMESTAMP TIME INDEX,
)
PARTITION BY RANGE COLUMNS (a) (
  PARTITION p0 VALUES LESS THAN (10),
  PARTITION p1 VALUES LESS THAN (20),
  PARTITION p2 VALUES LESS THAN (MAXVALUE),
);

Affected Rows: 0

-- SQLNESS REPLACE (\d{13}) ID
SELECT table_catalog, table_schema, table_name, partition_name, partition_expression, greptime_partition_id from information_schema.partitions WHERE table_name = 'my_table' ORDER BY table_catalog, table_schema, table_name, partition_name;

+---------------+--------------+------------+----------------+---------------------------------+-----------------------+
| table_catalog | table_schema | table_name | partition_name | partition_expression            | greptime_partition_id |
+---------------+--------------+------------+----------------+---------------------------------+-----------------------+
| greptime      | public       | my_table   | p0             | (a) VALUES LESS THAN (10)       | ID         |
| greptime      | public       | my_table   | p1             | (a) VALUES LESS THAN (20)       | ID         |
| greptime      | public       | my_table   | p2             | (a) VALUES LESS THAN (MAXVALUE) | ID         |
+---------------+--------------+------------+----------------+---------------------------------+-----------------------+

-- SQLNESS REPLACE (\d{13}) REGION_ID
-- SQLNESS REPLACE (\d{1}) PEER_ID
SELECT region_id, peer_id, is_leader, status FROM information_schema.greptime_region_peers ORDER BY peer_id;

+---------------+---------+-----------+--------+
| region_id     | peer_id | is_leader | status |
+---------------+---------+-----------+--------+
| REGION_ID | PEER_ID       | Yes       | ALIVE  |
| REGION_ID | PEER_ID       | Yes       | ALIVE  |
| REGION_ID | PEER_ID       | Yes       | ALIVE  |
+---------------+---------+-----------+--------+

DROP TABLE my_table;

Affected Rows: 0

