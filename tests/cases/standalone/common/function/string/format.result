-- String FORMAT function tests
-- Basic FORMAT function
SELECT FORMAT('Hello {}', 'world');

+----------------------------------------+
| format(Utf8("Hello {}"),Utf8("world")) |
+----------------------------------------+
| Hello world                            |
+----------------------------------------+

SELECT FORMAT('Number: {}', 42);

+--------------------------------------+
| format(Utf8("Number: {}"),Int64(42)) |
+--------------------------------------+
| Number: 42                           |
+--------------------------------------+

SELECT FORMAT('{} + {} = {}', 2, 3, 5);

+---------------------------------------------------------+
| format(Utf8("{} + {} = {}"),Int64(2),Int64(3),Int64(5)) |
+---------------------------------------------------------+
| 2 + 3 = 5                                               |
+---------------------------------------------------------+

-- FORMAT with named placeholders
SELECT FORMAT('Hello {name}', 'name', 'world');

+---------------------------------------------------------+
| format(Utf8("Hello {name}"),Utf8("name"),Utf8("world")) |
+---------------------------------------------------------+
| Hello world                                             |
+---------------------------------------------------------+

SELECT FORMAT('{first} {last}', 'first', 'John', 'last', 'Doe');

+------------------------------------------------------------------------------------+
| format(Utf8("{first} {last}"),Utf8("first"),Utf8("John"),Utf8("last"),Utf8("Doe")) |
+------------------------------------------------------------------------------------+
| John Doe                                                                           |
+------------------------------------------------------------------------------------+

-- FORMAT with different data types
SELECT FORMAT('Value: {}, Date: {}', 123.45, '2023-01-01');

+------------------------------------------------------------------------+
| format(Utf8("Value: {}, Date: {}"),Float64(123.45),Utf8("2023-01-01")) |
+------------------------------------------------------------------------+
| Value: 123.45, Date: 2023-01-01                                        |
+------------------------------------------------------------------------+

SELECT FORMAT('Boolean: {}, NULL: {}', true, NULL);

+----------------------------------------------------------+
| format(Utf8("Boolean: {}, NULL: {}"),Boolean(true),NULL) |
+----------------------------------------------------------+
| Boolean: true, NULL:                                     |
+----------------------------------------------------------+

-- Test with table data
CREATE TABLE format_test("name" VARCHAR, age INTEGER, salary DOUBLE, ts TIMESTAMP TIME INDEX);

Affected Rows: 0

INSERT INTO format_test VALUES
    ('John', 30, 50000.0, 1000),
    ('Jane', 25, 60000.0, 2000),
    ('Bob', 35, 55000.0, 3000);

Affected Rows: 3

SELECT FORMAT('Employee: {}, Age: {}, Salary: {}', "name", age, salary) FROM format_test ORDER BY ts;

+-------------------------------------------------------------------------------------------------------+
| format(Utf8("Employee: {}, Age: {}, Salary: {}"),format_test.name,format_test.age,format_test.salary) |
+-------------------------------------------------------------------------------------------------------+
| Employee: John, Age: 30, Salary: 50000                                                                |
| Employee: Jane, Age: 25, Salary: 60000                                                                |
| Employee: Bob, Age: 35, Salary: 55000                                                                 |
+-------------------------------------------------------------------------------------------------------+

SELECT FORMAT('{} is {} years old', "name", age) FROM format_test ORDER BY ts;

+---------------------------------------------------------------------+
| format(Utf8("{} is {} years old"),format_test.name,format_test.age) |
+---------------------------------------------------------------------+
| John is 30 years old                                                |
| Jane is 25 years old                                                |
| Bob is 35 years old                                                 |
+---------------------------------------------------------------------+

DROP TABLE format_test;

Affected Rows: 0

-- Test escape characters (your new feature)
SELECT FORMAT('Path: {{root}}/{dir}/file-{}.txt', 'dir', 'etc', 42);

+------------------------------------------------------------------------------------+
| format(Utf8("Path: {{root}}/{dir}/file-{}.txt"),Utf8("dir"),Utf8("etc"),Int64(42)) |
+------------------------------------------------------------------------------------+
| Path: {root}/etc/file-42.txt                                                       |
+------------------------------------------------------------------------------------+

SELECT FORMAT('JSON: {{"key": "{value}"}}', 'value', 'test');

+-----------------------------------------------------------------------+
| format(Utf8("JSON: {{"key": "{value}"}}"),Utf8("value"),Utf8("test")) |
+-----------------------------------------------------------------------+
| JSON: {"key": "test"}                                                 |
+-----------------------------------------------------------------------+

SELECT FORMAT('Braces: {{ and }} around {}', 'content');

+-------------------------------------------------------------+
| format(Utf8("Braces: {{ and }} around {}"),Utf8("content")) |
+-------------------------------------------------------------+
| Braces: { and } around content                              |
+-------------------------------------------------------------+

-- Test mixed positional and named with escapes
SELECT FORMAT('Config: {{database: "{db}", user: "{}", table: "{table}"}}', 'admin', 'db', 'mydb', 'table', 'users');

+----------------------------------------------------------------------------------------------------------------------------------------------+
| format(Utf8("Config: {{database: "{db}", user: "{}", table: "{table}"}}"),Utf8("admin"),Utf8("db"),Utf8("mydb"),Utf8("table"),Utf8("users")) |
+----------------------------------------------------------------------------------------------------------------------------------------------+
| Config: {database: "mydb", user: "admin", table: "users"}                                                                                    |
+----------------------------------------------------------------------------------------------------------------------------------------------+

-- Test insufficient arguments (graceful degradation)
SELECT FORMAT('A:{} B:{} C:{}', 'first', 'second');

+-------------------------------------------------------------+
| format(Utf8("A:{} B:{} C:{}"),Utf8("first"),Utf8("second")) |
+-------------------------------------------------------------+
| A:first B:second C:{}                                       |
+-------------------------------------------------------------+

SELECT FORMAT('Named {x} and {y}', 'x', 'value1');

+------------------------------------------------------------+
| format(Utf8("Named {x} and {y}"),Utf8("x"),Utf8("value1")) |
+------------------------------------------------------------+
| Named value1 and {y}                                       |
+------------------------------------------------------------+

SELECT FORMAT('Position {} Named {name}', 'pos_val', 'name', 'named_val', 'extra');

+-------------------------------------------------------------------------------------------------------+
| format(Utf8("Position {} Named {name}"),Utf8("pos_val"),Utf8("name"),Utf8("named_val"),Utf8("extra")) |
+-------------------------------------------------------------------------------------------------------+
| Position pos_val Named named_val                                                                      |
+-------------------------------------------------------------------------------------------------------+

-- Test complex data types formatting
CREATE TABLE format_complex(
    "id" INTEGER,
    score DECIMAL(10,2), 
    created_at TIMESTAMP,
    d DATE,
    is_active BOOLEAN,
    ts TIMESTAMP TIME INDEX
);

Affected Rows: 0

INSERT INTO format_complex VALUES
    (1, 95.50, '2024-01-01 10:00:00', '2024-01-01', true, 1000),
    (2, 87.25, '2024-01-02 15:30:00', '2024-01-02', false, 2000);

Affected Rows: 2

-- Test formatting various data types
SELECT FORMAT('ID:{} Score:{} Created:{} Active:{}', "id", score, created_at, is_active) 
FROM format_complex ORDER BY ts;

+-----------------------------------------------------------------------------------------------------------------------------------------------+
| format(Utf8("ID:{} Score:{} Created:{} Active:{}"),format_complex.id,format_complex.score,format_complex.created_at,format_complex.is_active) |
+-----------------------------------------------------------------------------------------------------------------------------------------------+
| ID:1 Score:95.50 Created:2024-01-01 10:00:00 Active:true                                                                                      |
| ID:2 Score:87.25 Created:2024-01-02 15:30:00 Active:false                                                                                     |
+-----------------------------------------------------------------------------------------------------------------------------------------------+

SELECT FORMAT('Record {id}: {status} user with score {score} on {date}', 
              'id', "id", 
              'status', CASE WHEN is_active THEN 'active' ELSE 'inactive' END,
              'score', score,
              'date', d) 
FROM format_complex ORDER BY ts;

+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| format(Utf8("Record {id}: {status} user with score {score} on {date}"),Utf8("id"),format_complex.id,Utf8("status"),CASE WHEN format_complex.is_active THEN Utf8("active") ELSE Utf8("inactive") END,Utf8("score"),format_complex.score,Utf8("date"),format_complex.d) |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Record 1: active user with score 95.50 on 2024-01-01                                                                                                                                                                                                                  |
| Record 2: inactive user with score 87.25 on 2024-01-02                                                                                                                                                                                                                |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

-- With timezone
set time_zone='Asia/Shanghai';

Affected Rows: 0

SELECT FORMAT('Created at: {} ,date {}', created_at, d) 
FROM format_complex ORDER BY ts;

+------------------------------------------------------------------------------------+
| format(Utf8("Created at: {} ,date {}"),format_complex.created_at,format_complex.d) |
+------------------------------------------------------------------------------------+
| Created at: 2024-01-01 18:00:00 ,date 2024-01-01                                   |
| Created at: 2024-01-02 23:30:00 ,date 2024-01-02                                   |
+------------------------------------------------------------------------------------+

set time_zone='UTC';

Affected Rows: 0

-- Test with very large strings
SELECT FORMAT('Repeat: {}', REPEAT('A', 1000));


| format(Utf8("Repeat: {}"),repeat(Utf8("A"),Int|

| Repeat|


-- Test edge case: only escape characters
SELECT FORMAT('{{}}');

+----------------------+
| format(Utf8("{{}}")) |
+----------------------+
| {}                   |
+----------------------+

SELECT FORMAT('{{text}}');

+--------------------------+
| format(Utf8("{{text}}")) |
+--------------------------+
| {text}                   |
+--------------------------+

-- Test complex nested scenarios
SELECT FORMAT('User {user} logged {action} at {time} with result: {{"status": "{status}", "code": {}}}',
              'user', 'admin',
              'action', 'in', 
              'time', '2024-01-01',
              'status', 'success',
              200);

+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| format(Utf8("User {user} logged {action} at {time} with result: {{"status": "{status}", "code": {}}}"),Utf8("user"),Utf8("admin"),Utf8("action"),Utf8("in"),Utf8("time"),Utf8("2024-01-01"),Utf8("status"),Utf8("success"),Int64(200)) |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| User admin logged in at 2024-01-01 with result: {"status": "success", "code": 200}                                                                                                                                                     |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

-- Test empty and whitespace placeholders (should be treated as positional)
SELECT FORMAT('A:{} B:{ } C:{  }', 'val1', 'val2', 'val3');

+--------------------------------------------------------------------------+
| format(Utf8("A:{} B:{ } C:{  }"),Utf8("val1"),Utf8("val2"),Utf8("val3")) |
+--------------------------------------------------------------------------+
| A:val1 B:{ } C:{  }                                                      |
+--------------------------------------------------------------------------+

DROP TABLE format_complex;

Affected Rows: 0

