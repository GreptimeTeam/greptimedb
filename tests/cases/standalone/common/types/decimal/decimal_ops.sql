-- Some cases port from https://github.com/duckdb/duckdb/blob/main/test/sql/types/decimal/test_decimal_ops.test

CREATE TABLE decimals(d DECIMAL(3, 2), ts timestamp time index);

INSERT INTO decimals VALUES ('0.1',1000), ('0.2',2000);

-- SQLNESS SORT_RESULT 3 1
SELECT * FROM decimals;

-- ORDER BY

SELECT * FROM decimals ORDER BY d DESC;

-- equality

SELECT * FROM decimals WHERE d = '0.1'::DECIMAL(3,2);

-- greater than equals

-- SQLNESS SORT_RESULT 3 1
SELECT * FROM decimals WHERE d >= '0.1'::DECIMAL(3,2);

-- what about if we use different decimal scales?

SELECT * FROM decimals WHERE d = '0.1'::DECIMAL(9,5);

SELECT * FROM decimals WHERE d >= '0.1'::DECIMAL(9,5) ORDER BY 1;

-- what if we compare decimals with different scales and width (3,2) vs (9,1)

INSERT INTO decimals VALUES ('0.11',3000), ('0.21',4000);

SELECT * FROM decimals WHERE d = '0.1'::DECIMAL(9,1);

SELECT * FROM decimals WHERE d > '0.1'::DECIMAL(9,1) ORDER BY 1;

DELETE FROM decimals WHERE d <> d::DECIMAL(9,1);

SELECT * FROM decimals;

-- test ABS function

SELECT ABS('-0.1'::DECIMAL), ABS('0.1'::DECIMAL), ABS(NULL::DECIMAL);

SELECT ABS('-0.1'::DECIMAL(4,3)) AS col1, ABS('-0.1'::DECIMAL(9,3)) AS col2, ABS('-0.1'::DECIMAL(18,3)) AS col3, ABS('-0.1'::DECIMAL(38,3)) AS col4;

-- test CEIL function

SELECT CEIL('0.1'::DECIMAL), CEIL('-0.1'::DECIMAL), CEIL(NULL::DECIMAL);

SELECT CEIL('100.3'::DECIMAL), CEIL('-127012.3'::DECIMAL);

SELECT CEIL('10.5'::DECIMAL), CEIL('-10.5'::DECIMAL);

-- ceil function on the boundaries

SELECT CEIL('999.9'::DECIMAL(4,1)), CEIL('99999999.9'::DECIMAL(9,1)), CEIL('99999999999999999.9'::DECIMAL(18,1)), CEIL('9999999999999999999999999999999999999.9'::DECIMAL(38,1));

SELECT CEIL('-999.9'::DECIMAL(4,1)), CEIL('-99999999.9'::DECIMAL(9,1)), CEIL('-99999999999999999.9'::DECIMAL(18,1)), CEIL('-9999999999999999999999999999999999999.9'::DECIMAL(38,1));

-- test FLOOR function

SELECT FLOOR('0.1'::DECIMAL), FLOOR('-0.1'::DECIMAL), FLOOR(NULL::DECIMAL);

SELECT FLOOR('100.3'::DECIMAL), FLOOR('-127012.3'::DECIMAL);

SELECT FLOOR('10.5'::DECIMAL), FLOOR('-10.5'::DECIMAL);

-- floor function on the boundaries

SELECT FLOOR('999.9'::DECIMAL(4,1)), FLOOR('99999999.9'::DECIMAL(9,1)), FLOOR('99999999999999999.9'::DECIMAL(18,1)), FLOOR('9999999999999999999999999999999999999.9'::DECIMAL(38,1));

SELECT FLOOR('-999.9'::DECIMAL(4,1)), FLOOR('-99999999.9'::DECIMAL(9,1)), FLOOR('-99999999999999999.9'::DECIMAL(18,1)), FLOOR('-9999999999999999999999999999999999999.9'::DECIMAL(38,1));

-- test unary ROUND function

SELECT ROUND('0.1'::DECIMAL), ROUND('-0.1'::DECIMAL), ROUND(NULL::DECIMAL);

SELECT ROUND('100.3'::DECIMAL), ROUND('-127012.3'::DECIMAL);

SELECT ROUND('10.5'::DECIMAL), ROUND('-10.5'::DECIMAL);

-- round function on the boundaries

SELECT ROUND('999.9'::DECIMAL(4,1)), ROUND('99999999.9'::DECIMAL(9,1)), ROUND('99999999999999999.9'::DECIMAL(18,1)), ROUND('9999999999999999999999999999999999999.9'::DECIMAL(38,1));

SELECT ROUND('-999.9'::DECIMAL(4,1)), ROUND('-99999999.9'::DECIMAL(9,1)), ROUND('-99999999999999999.9'::DECIMAL(18,1)), ROUND('-9999999999999999999999999999999999999.9'::DECIMAL(38,1));

-- round with precision

SELECT ROUND('100.3908147521'::DECIMAL(18,10), 0)::VARCHAR,
        ROUND('100.3908147521'::DECIMAL(18,10), 1)::VARCHAR,
        ROUND('100.3908147521'::DECIMAL(18,10), 2)::VARCHAR,
        ROUND('100.3908147521'::DECIMAL(18,10), 3)::VARCHAR,
        ROUND('100.3908147521'::DECIMAL(18,10), 4)::VARCHAR,
        ROUND('100.3908147521'::DECIMAL(18,10), 5)::VARCHAR,
        ROUND('100.3908147521'::DECIMAL(18,10), 6)::VARCHAR,
        ROUND('100.3908147521'::DECIMAL(18,10), 7)::VARCHAR,
        ROUND('100.3908147521'::DECIMAL(18,10), 8)::VARCHAR,
        ROUND('100.3908147521'::DECIMAL(18,10), 9)::VARCHAR,
        ROUND('100.3908147521'::DECIMAL(18,10), 10)::VARCHAR,
        ROUND('100.3908147521'::DECIMAL(18,10), 100000)::VARCHAR,
        ROUND(NULL::DECIMAL, 0);

-- negative precision

SELECT ROUND('1049578239572094512.32415'::DECIMAL(30,10), 0)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -1)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -2)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -3)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -4)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -5)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -6)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -7)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -8)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -9)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -10)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -11)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -12)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -13)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -14)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -15)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -16)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -18)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -19)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -20)::VARCHAR,
        ROUND('1049578239572094512.32415'::DECIMAL(30,10), -19842)::VARCHAR;


-- negative values

SELECT ROUND('-100.3908147521'::DECIMAL(18,10), 0)::VARCHAR,
        ROUND('-100.3908147521'::DECIMAL(18,10), 1)::VARCHAR,
        ROUND('-100.3908147521'::DECIMAL(18,10), 2)::VARCHAR,
        ROUND('-100.3908147521'::DECIMAL(18,10), 3)::VARCHAR,
        ROUND('-100.3908147521'::DECIMAL(18,10), 4)::VARCHAR,
        ROUND('-100.3908147521'::DECIMAL(18,10), 5)::VARCHAR,
        ROUND('-100.3908147521'::DECIMAL(18,10), 6)::VARCHAR,
        ROUND('-100.3908147521'::DECIMAL(18,10), 7)::VARCHAR,
        ROUND('-100.3908147521'::DECIMAL(18,10), 8)::VARCHAR,
        ROUND('-100.3908147521'::DECIMAL(18,10), 9)::VARCHAR,
        ROUND('-100.3908147521'::DECIMAL(18,10), 10)::VARCHAR,
        ROUND('-100.3908147521'::DECIMAL(18,10), 100000)::VARCHAR,
        ROUND(NULL::DECIMAL, 0);


SELECT ROUND('-1049578239572094512.32415'::DECIMAL(30,10), 0)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -1)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -2)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -3)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -4)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -5)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -6)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -7)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -8)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -9)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -10)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -11)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -12)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -13)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -14)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -15)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -16)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -18)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -19)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -20)::VARCHAR,
        ROUND('-1049578239572094512.32415'::DECIMAL(30,10), -19842)::VARCHAR;

SELECT ROUND(12::DECIMAL(3,0));

-- null precision becomes null (postgres behavior)

SELECT ROUND(12::DECIMAL(3,0), NULL);

-- different types for ROUND

SELECT ROUND('-100.3'::DECIMAL(4,1), 1)::VARCHAR,
        ROUND('104.3'::DECIMAL(4,1), 0)::VARCHAR,
        ROUND('104.3'::DECIMAL(4,1), -1)::VARCHAR;

SELECT ROUND('-100.3'::DECIMAL(9,1), 1)::VARCHAR,
        ROUND('104.3'::DECIMAL(9,1), 0)::VARCHAR,
        ROUND('104.3'::DECIMAL(9,1), -1)::VARCHAR;

SELECT ROUND('-100.3'::DECIMAL(18,1), 1)::VARCHAR,
        ROUND('104.3'::DECIMAL(18,1), 0)::VARCHAR,
        ROUND('104.3'::DECIMAL(18,1), -1)::VARCHAR;

-- use decimal in sub-query

SELECT (SELECT '1.0'::DECIMAL(2,1));

-- test join with decimals

CREATE TABLE tmp_table(i INTEGER, ts timestamp time index);

INSERT INTO tmp_table VALUES (1, 1000), (2, 2000), (3, 3000);

-- SQLNESS SORT_RESULT 3 1
SELECT * FROM tmp_table;

-- SQLNESS SORT_RESULT 3 1
SELECT * FROM tmp_table JOIN decimals ON decimals.ts = tmp_table.ts;

DROP TABLE decimals;

DROP TABLE tmp_table;
