-- Migrated from DuckDB test: test/sql/types/float/ieee_floating_points.test
-- Test IEEE floating point behavior
-- Test special float values
CREATE TABLE float_special(f FLOAT, d DOUBLE, ts TIMESTAMP TIME INDEX);

Affected Rows: 0

-- Insert special values
INSERT INTO float_special VALUES
    (0.0, 0.0, 1000),
    (-0.0, -0.0, 2000),
    ('inf'::FLOAT, 'inf'::DOUBLE, 3000),
    ('-inf'::FLOAT, '-inf'::DOUBLE, 4000),
    ('nan'::FLOAT, 'nan'::DOUBLE, 5000);

Affected Rows: 5

-- Test basic operations with special values
SELECT f, d FROM float_special ORDER BY ts;

+------+------+
| f    | d    |
+------+------+
| 0.0  | 0.0  |
| -0.0 | -0.0 |
| inf  | inf  |
| -inf | -inf |
| NaN  | NaN  |
+------+------+

-- Test comparison with infinity
-- It doesn't follow the IEEE standard, but follows PG instead.
SELECT f, f > 1000000 FROM float_special ORDER BY ts;

+------+----------------------------------+
| f    | float_special.f > Int64(1000000) |
+------+----------------------------------+
| 0.0  | false                            |
| -0.0 | false                            |
| inf  | true                             |
| -inf | false                            |
| NaN  | true                             |
+------+----------------------------------+

SELECT d, d < -1000000 FROM float_special ORDER BY ts;

+------+-----------------------------------+
| d    | float_special.d < Int64(-1000000) |
+------+-----------------------------------+
| 0.0  | false                             |
| -0.0 | false                             |
| inf  | false                             |
| -inf | true                              |
| NaN  | false                             |
+------+-----------------------------------+

-- Test NaN behavior
-- NaN != NaN
SELECT f, f = f FROM float_special WHERE f != f ORDER BY ts;

++
++

SELECT d, d IS NULL FROM float_special ORDER BY ts;

+------+-------------------------+
| d    | float_special.d IS NULL |
+------+-------------------------+
| 0.0  | false                   |
| -0.0 | false                   |
| inf  | false                   |
| -inf | false                   |
| NaN  | false                   |
+------+-------------------------+

-- Test arithmetic with special values
SELECT f, f + 1 FROM float_special ORDER BY ts;

+------+----------------------------+
| f    | float_special.f + Int64(1) |
+------+----------------------------+
| 0.0  | 1.0                        |
| -0.0 | 1.0                        |
| inf  | inf                        |
| -inf | -inf                       |
| NaN  | NaN                        |
+------+----------------------------+

SELECT d, d * 2 FROM float_special ORDER BY ts;

+------+----------------------------+
| d    | float_special.d * Int64(2) |
+------+----------------------------+
| 0.0  | 0.0                        |
| -0.0 | -0.0                       |
| inf  | inf                        |
| -inf | -inf                       |
| NaN  | NaN                        |
+------+----------------------------+

-- Test normal floating point precision
CREATE TABLE float_precision(f FLOAT, d DOUBLE, ts TIMESTAMP TIME INDEX);

Affected Rows: 0

INSERT INTO float_precision VALUES
    (1.23456789, 1.23456789012345, 1000),
    (0.000001, 0.000000000001, 2000),
    (1e10, 1e15, 3000),
    (1e-10, 1e-15, 4000);

Affected Rows: 4

SELECT f, d FROM float_precision ORDER BY ts;

+---------------+--------------------+
| f             | d                  |
+---------------+--------------------+
| 1.2345679     | 1.23456789012345   |
| 0.000001      | 1e-12              |
| 10000000000.0 | 1000000000000000.0 |
| 1e-10         | 1e-15              |
+---------------+--------------------+

-- Test rounding and precision
SELECT ROUND(f, 3), ROUND(d, 6) FROM float_precision ORDER BY ts;

+-----------------------------------+-----------------------------------+
| round(float_precision.f,Int64(3)) | round(float_precision.d,Int64(6)) |
+-----------------------------------+-----------------------------------+
| 1.235                             | 1.234568                          |
| 0.0                               | 0.0                               |
| 10000000000.0                     | 1000000000000000.0                |
| 0.0                               | 0.0                               |
+-----------------------------------+-----------------------------------+

DROP TABLE float_special;

Affected Rows: 0

DROP TABLE float_precision;

Affected Rows: 0

