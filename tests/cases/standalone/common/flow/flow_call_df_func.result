CREATE TABLE numbers_input_df_func (
    number INT,
    ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(number),
    TIME INDEX(ts)
);

Affected Rows: 0

-- call `sum(abs(number))` where `abs` is DataFusion Function and `sum` is flow function
CREATE FLOW test_numbers_df_func
SINK TO out_num_cnt_df_func
AS
SELECT sum(abs(number)), date_bin(INTERVAL '1 second', ts, '2021-07-01 00:00:00') as time_window FROM numbers_input_df_func GROUP BY time_window;

Affected Rows: 0

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

INSERT INTO numbers_input_df_func
VALUES
    (-20, "2021-07-01 00:00:00.200"),
    (22, "2021-07-01 00:00:00.600");

Affected Rows: 2

-- flush flow to make sure that table is created and data is inserted
-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

-- note that this quote-unquote column is a column-name, **not** a aggregation expr, generated by datafusion
SELECT "sum(abs(numbers_input_df_func.number))", time_window FROM out_num_cnt_df_func;

+----------------------------------------+---------------------+
| sum(abs(numbers_input_df_func.number)) | time_window         |
+----------------------------------------+---------------------+
| 42                                     | 2021-07-01T00:00:00 |
+----------------------------------------+---------------------+

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

INSERT INTO numbers_input_df_func
VALUES
    (23,"2021-07-01 00:00:01.000"),
    (-24,"2021-07-01 00:00:01.500");

Affected Rows: 2

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

-- note that this quote-unquote column is a column-name, **not** a aggregation expr, generated by datafusion
SELECT "sum(abs(numbers_input_df_func.number))", time_window FROM out_num_cnt_df_func;

+----------------------------------------+---------------------+
| sum(abs(numbers_input_df_func.number)) | time_window         |
+----------------------------------------+---------------------+
| 42                                     | 2021-07-01T00:00:00 |
| 47                                     | 2021-07-01T00:00:01 |
+----------------------------------------+---------------------+

DROP FLOW test_numbers_df_func;

Affected Rows: 0

DROP TABLE numbers_input_df_func;

Affected Rows: 0

DROP TABLE out_num_cnt_df_func;

Affected Rows: 0

CREATE TABLE numbers_input_df_func (
    number INT,
    ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(number),
    TIME INDEX(ts)
);

Affected Rows: 0

-- call `abs(sum(number))`to make sure that calling `abs` function(impl by datafusion) on `sum` function(impl by flow) is working
CREATE FLOW test_numbers_df_func
SINK TO out_num_cnt_df_func
AS
SELECT abs(sum(number)), date_bin(INTERVAL '1 second', ts, '2021-07-01 00:00:00') as time_window FROM numbers_input_df_func GROUP BY time_window;

Affected Rows: 0

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

INSERT INTO numbers_input_df_func
VALUES
    (-20, "2021-07-01 00:00:00.200"),
    (22, "2021-07-01 00:00:00.600");

Affected Rows: 2

-- flush flow to make sure that table is created and data is inserted
-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

SELECT "abs(sum(numbers_input_df_func.number))", time_window FROM out_num_cnt_df_func;

+----------------------------------------+---------------------+
| abs(sum(numbers_input_df_func.number)) | time_window         |
+----------------------------------------+---------------------+
| 2                                      | 2021-07-01T00:00:00 |
+----------------------------------------+---------------------+

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

INSERT INTO numbers_input_df_func
VALUES
    (23,"2021-07-01 00:00:01.000"),
    (-24,"2021-07-01 00:00:01.500");

Affected Rows: 2

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

SELECT "abs(sum(numbers_input_df_func.number))", time_window FROM out_num_cnt_df_func;

+----------------------------------------+---------------------+
| abs(sum(numbers_input_df_func.number)) | time_window         |
+----------------------------------------+---------------------+
| 2                                      | 2021-07-01T00:00:00 |
| 1                                      | 2021-07-01T00:00:01 |
+----------------------------------------+---------------------+

DROP FLOW test_numbers_df_func;

Affected Rows: 0

DROP TABLE numbers_input_df_func;

Affected Rows: 0

DROP TABLE out_num_cnt_df_func;

Affected Rows: 0

-- test date_bin
CREATE TABLE numbers_input_df_func (
    number INT,
    ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(number),
    TIME INDEX(ts)
);

Affected Rows: 0

CREATE FLOW test_numbers_df_func
SINK TO out_num_cnt_df_func
AS 
SELECT max(number) - min(number) as maxmin, date_bin(INTERVAL '1 second', ts, '2021-07-01 00:00:00'::Timestamp) as time_window FROM numbers_input_df_func GROUP BY time_window;

Affected Rows: 0

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

INSERT INTO numbers_input_df_func
VALUES
    (20, "2021-07-01 00:00:00.200"),
    (22, "2021-07-01 00:00:00.600");

Affected Rows: 2

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

SELECT maxmin, time_window FROM out_num_cnt_df_func;

+--------+---------------------+
| maxmin | time_window         |
+--------+---------------------+
| 2      | 2021-07-01T00:00:00 |
+--------+---------------------+

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

INSERT INTO numbers_input_df_func
VALUES
    (23,"2021-07-01 00:00:01.000"),
    (24,"2021-07-01 00:00:01.500");

Affected Rows: 2

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

SELECT maxmin, time_window FROM out_num_cnt_df_func;

+--------+---------------------+
| maxmin | time_window         |
+--------+---------------------+
| 2      | 2021-07-01T00:00:00 |
| 1      | 2021-07-01T00:00:01 |
+--------+---------------------+

DROP FLOW test_numbers_df_func;

Affected Rows: 0

DROP TABLE numbers_input_df_func;

Affected Rows: 0

DROP TABLE out_num_cnt_df_func;

Affected Rows: 0

-- test date_trunc
CREATE TABLE numbers_input_df_func (
    number INT,
    ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(number),
    TIME INDEX(ts)
);

Affected Rows: 0

CREATE FLOW test_numbers_df_func
SINK TO out_num_cnt
AS 
SELECT date_trunc('second', ts) as time_window, sum(number) as sum_num FROM numbers_input_df_func GROUP BY date_trunc('second', ts);

Affected Rows: 0

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

INSERT INTO numbers_input_df_func
VALUES
    (20, "2021-07-01 00:00:00.200"),
    (22, "2021-07-01 00:00:00.600");

Affected Rows: 2

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

SELECT time_window, sum_num FROM out_num_cnt;

+---------------------+---------+
| time_window         | sum_num |
+---------------------+---------+
| 2021-07-01T00:00:00 | 42      |
+---------------------+---------+

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

INSERT INTO numbers_input_df_func
VALUES
    (23,"2021-07-01 00:00:01.000"),
    (24,"2021-07-01 00:00:01.500");

Affected Rows: 2

-- SQLNESS REPLACE (ADMIN\sFLUSH_FLOW\('\w+'\)\s+\|\n\+-+\+\n\|\s+)[0-9]+\s+\| $1 FLOW_FLUSHED  |
ADMIN FLUSH_FLOW('test_numbers_df_func');

+------------------------------------------+
| ADMIN FLUSH_FLOW('test_numbers_df_func') |
+------------------------------------------+
|  FLOW_FLUSHED  |
+------------------------------------------+

SELECT time_window, sum_num FROM out_num_cnt;

+---------------------+---------+
| time_window         | sum_num |
+---------------------+---------+
| 2021-07-01T00:00:00 | 42      |
| 2021-07-01T00:00:01 | 47      |
+---------------------+---------+

DROP FLOW test_numbers_df_func;

Affected Rows: 0

DROP TABLE numbers_input_df_func;

Affected Rows: 0

DROP TABLE out_num_cnt;

Affected Rows: 0

