name: Build linux artifacts
description: Build linux artifacts
inputs:
  arch:
    description: Architecture to build
    required: true
  cargo-profile:
    description: Cargo profile to build
    required: true
  version:
    description: Version of the artifact
    required: true
  disable-run-tests:
    description: Disable running integration tests
    required: true
  release-to-s3-bucket:
    description: S3 bucket to store released artifacts
    required: true
  aws-access-key-id:
    description: AWS access key id
    required: true
  aws-secret-access-key:
    description: AWS secret access key
    required: true
  aws-region:
    description: AWS region
    required: true
  dev-mode:
    description: Enable dev mode, only build standard greptime
    required: false
    default: 'false'
  upload-to-s3:
    description: Upload to S3
    required: false
    default: 'true'
  working-dir:
    description: Working directory to build the artifacts
    required: false
    default: .
runs:
  using: composite
  steps:
    - name: Run integration test
      if: ${{ inputs.disable-run-tests == 'false' }}
      shell: bash
      # NOTE: If the BUILD_JOBS > 4, it's always OOM in EC2 instance.
      run: |
        cd ${{ inputs.working-dir }} && \
        make run-it-in-container BUILD_JOBS=4

    - name: Upload sqlness logs
      if: ${{ failure() && inputs.disable-run-tests == 'false' }} # Only upload logs when the integration tests failed.
      uses: actions/upload-artifact@v3
      with:
        name: sqlness-logs
        path: /tmp/greptime-*.log
        retention-days: 3

    - name: Build standard greptime
      uses: ./.github/actions/build-greptime-binary
      with:
        base-image: ubuntu
        features: pyo3_backend,servers/dashboard
        cargo-profile: ${{ inputs.cargo-profile }}
        artifacts-dir: greptime-linux-${{ inputs.arch }}-pyo3-${{ inputs.version }}
        version: ${{ inputs.version }}
        release-to-s3-bucket: ${{ inputs.release-to-s3-bucket }}
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
        upload-to-s3: ${{ inputs.upload-to-s3 }}
        working-dir: ${{ inputs.working-dir }}

    - name: Build greptime without pyo3
      if: ${{ inputs.dev-mode == 'false' }}
      uses: ./.github/actions/build-greptime-binary
      with:
        base-image: ubuntu
        features: servers/dashboard
        cargo-profile: ${{ inputs.cargo-profile }}
        artifacts-dir: greptime-linux-${{ inputs.arch }}-${{ inputs.version }}
        version: ${{ inputs.version }}
        release-to-s3-bucket: ${{ inputs.release-to-s3-bucket }}
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
        upload-to-s3: ${{ inputs.upload-to-s3 }}
        working-dir: ${{ inputs.working-dir }}

    - name: Build greptime on centos base image
      uses: ./.github/actions/build-greptime-binary
      if: ${{ inputs.arch == 'amd64' && inputs.dev-mode == 'false' }} # Only build centos7 base image for amd64.
      with:
        base-image: centos
        features: servers/dashboard
        cargo-profile: ${{ inputs.cargo-profile }}
        artifacts-dir: greptime-linux-${{ inputs.arch }}-centos-${{ inputs.version }}
        version: ${{ inputs.version }}
        release-to-s3-bucket: ${{ inputs.release-to-s3-bucket }}
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
        upload-to-s3: ${{ inputs.upload-to-s3 }}
        working-dir: ${{ inputs.working-dir }}
